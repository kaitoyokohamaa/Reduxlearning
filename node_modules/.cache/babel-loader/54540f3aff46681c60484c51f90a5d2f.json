{"ast":null,"code":"import * as actionTypes from '../actions';\nconst initialState = {\n  results: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.STORE_RESULT:\n      return { ...state,\n        results: state.results.concat({\n          id: new Date(),\n          value: state.counter\n        })\n      };\n\n    case actionTypes.DELETE_RESULT:\n      // const id = 2;\n      // const newArray = [...state.results];\n      // state.results.splice(id,1)\n      const updatedArray = state.results.filter(result => result.id !== action.resultElId);\n      return { ...state,\n        results: updatedArray\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/yokohamakaito/Downloads/redux--01-start/src/store/reducers/result.js"],"names":["actionTypes","initialState","results","reducer","state","action","type","STORE_RESULT","concat","id","Date","value","counter","DELETE_RESULT","updatedArray","filter","result","resultElId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAC;AADS,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAEH,YAAR,EAAqBI,MAArB,KAA+B;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,WAAW,CAACO,YAAjB;AACQ,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,OAAO,EAACE,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAqB;AAACC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAL;AAAgBC,UAAAA,KAAK,EAACP,KAAK,CAACQ;AAA5B,SAArB;AAFN,OAAN;;AAKR,SAAKZ,WAAW,CAACa,aAAjB;AACQ;AACA;AACA;AACA,YAAMC,YAAY,GAAGV,KAAK,CAACF,OAAN,CAAca,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACP,EAAP,KAAcJ,MAAM,CAACY,UAApD,CAArB;AAGA,aAAM,EACF,GAAGb,KADD;AAEFF,QAAAA,OAAO,EAACY;AAFN,OAAN;AAdZ;;AAmBA,SAAOV,KAAP;AACH,CArBD;;AAuBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions'\n\nconst initialState = {\n    results:[]\n}\n\nconst reducer = (state= initialState,action) =>{\n    switch(action.type){\n        case actionTypes.STORE_RESULT:\n                return{\n                    ...state,\n                    results:state.results.concat({id: new Date(),value:state.counter})\n                   \n                }\n        case actionTypes.DELETE_RESULT:\n                // const id = 2;\n                // const newArray = [...state.results];\n                // state.results.splice(id,1)\n                const updatedArray = state.results.filter(result => result.id !== action.resultElId)\n              \n                \n                return{\n                    ...state,\n                    results:updatedArray \n                }\n    }\n    return state;\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}