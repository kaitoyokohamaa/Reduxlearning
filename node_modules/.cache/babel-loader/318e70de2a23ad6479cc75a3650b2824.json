{"ast":null,"code":"import * as actionTypes from './actions';\nconst initialState = {\n  counter: 0,\n  results: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      const newState = Object.assign({}, state);\n      newState.counter = state.counter + 1;\n      return newState;\n\n    case actionTypes.DECREMENT:\n      return { ...state,\n        counter: state.counter - 1\n      };\n\n    case 'ADD':\n      return { ...state,\n        counter: state.counter + action.val\n      };\n\n    case 'SUB':\n      return { ...state,\n        counter: state.counter - action.val\n      };\n\n    case 'STORE_RESULT':\n      return { ...state,\n        results: state.results.concat({\n          id: new Date(),\n          value: state.counter\n        })\n      };\n\n    case 'DELETE_RESULT':\n      // const id = 2;\n      // const newArray = [...state.results];\n      // state.results.splice(id,1)\n      const updatedArray = state.results.filter(result => result.id !== action.resultElId);\n      return { ...state,\n        results: updatedArray\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/yokohamakaito/Downloads/redux--01-start/src/store/reducer.js"],"names":["actionTypes","initialState","counter","results","reducer","state","action","type","INCREMENT","newState","Object","assign","DECREMENT","val","concat","id","Date","value","updatedArray","filter","result","resultElId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAC,CADS;AAEjBC,EAAAA,OAAO,EAAC;AAFS,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAEJ,YAAR,EAAqBK,MAArB,KAA+B;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,WAAW,CAACQ,SAAjB;AACQ,YAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,CAAjB;AACAI,MAAAA,QAAQ,CAACP,OAAT,GAAiBG,KAAK,CAACH,OAAN,GAAe,CAAhC;AAEA,aAAOO,QAAP;;AAGR,SAAKT,WAAW,CAACY,SAAjB;AACQ,aAAM,EAEF,GAAGP,KAFD;AAGFH,QAAAA,OAAO,EAACG,KAAK,CAACH,OAAN,GAAgB;AAHtB,OAAN;;AAKR,SAAK,KAAL;AACQ,aAAM,EACF,GAAGG,KADD;AAEFH,QAAAA,OAAO,EAACG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACO;AAF7B,OAAN;;AAKR,SAAK,KAAL;AACQ,aAAM,EACF,GAAGR,KADD;AAEFH,QAAAA,OAAO,EAACG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACO;AAF7B,OAAN;;AAIR,SAAK,cAAL;AACQ,aAAM,EACF,GAAGR,KADD;AAEFF,QAAAA,OAAO,EAACE,KAAK,CAACF,OAAN,CAAcW,MAAd,CAAqB;AAACC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAL;AAAgBC,UAAAA,KAAK,EAACZ,KAAK,CAACH;AAA5B,SAArB;AAFN,OAAN;;AAKR,SAAK,eAAL;AACQ;AACA;AACA;AACA,YAAMgB,YAAY,GAAGb,KAAK,CAACF,OAAN,CAAcgB,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACL,EAAP,KAAcT,MAAM,CAACe,UAApD,CAArB;AAGA,aAAM,EACF,GAAGhB,KADD;AAEFF,QAAAA,OAAO,EAACe;AAFN,OAAN;AAtCZ;;AA2CA,SAAOb,KAAP;AACH,CA7CD;;AA+CA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from './actions'\n\nconst initialState = {\n    counter:0,\n    results:[]\n}\n\nconst reducer = (state= initialState,action) =>{\n    switch(action.type){\n        case actionTypes.INCREMENT:\n                const newState = Object.assign({}, state);\n                newState.counter=state.counter +1;\n              \n                return newState\n          \n             \n        case actionTypes.DECREMENT:\n                return{\n                    \n                    ...state,\n                    counter:state.counter - 1\n                }\n        case 'ADD':\n                return{\n                    ...state,\n                    counter:state.counter + action.val\n                    \n                }\n        case 'SUB':\n                return{\n                    ...state,\n                    counter:state.counter - action.val\n                }\n        case 'STORE_RESULT':\n                return{\n                    ...state,\n                    results:state.results.concat({id: new Date(),value:state.counter})\n                   \n                }\n        case 'DELETE_RESULT':\n                // const id = 2;\n                // const newArray = [...state.results];\n                // state.results.splice(id,1)\n                const updatedArray = state.results.filter(result => result.id !== action.resultElId)\n              \n                \n                return{\n                    ...state,\n                    results:updatedArray \n                }\n    }\n    return state;\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}