{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  results: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.STORE_RESULT:\n      return { ...state,\n        results: state.results.concat({\n          id: new Date(),\n          value: action.result * 2\n        })\n      };\n\n    case actionTypes.DELETE_RESULT:\n      const updatedArray = state.results.filter(result => result.id !== action.resultElId);\n      return { ...state,\n        results: updatedArray\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/yokohamakaito/Desktop/Reduxlearning/src/store/reducers/result.js"],"names":["actionTypes","updateObject","initialState","results","reducer","state","action","type","STORE_RESULT","concat","id","Date","value","result","DELETE_RESULT","updatedArray","filter","resultElId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,YAAR,QAA2B,YAA3B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAC;AADS,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAEH,YAAR,EAAqBI,MAArB,KAA+B;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,WAAW,CAACQ,YAAjB;AACQ,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,OAAO,EAACE,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAqB;AAACC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAL;AAAgBC,UAAAA,KAAK,EAACN,MAAM,CAACO,MAAP,GAAe;AAArC,SAArB;AAFN,OAAN;;AAKR,SAAKb,WAAW,CAACc,aAAjB;AACQ,YAAMC,YAAY,GAAGV,KAAK,CAACF,OAAN,CAAca,MAAd,CAAqBH,MAAM,IAAIA,MAAM,CAACH,EAAP,KAAcJ,MAAM,CAACW,UAApD,CAArB;AAEA,aAAM,EACF,GAAGZ,KADD;AAEFF,QAAAA,OAAO,EAACY;AAFN,OAAN;AAVZ;;AAeA,SAAOV,KAAP;AACH,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\nimport {updateObject} from '../utility'\nconst initialState = {\n    results:[]\n}\n\nconst reducer = (state= initialState,action) =>{\n    switch(action.type){\n        case actionTypes.STORE_RESULT:\n                return{\n                    ...state,\n                    results:state.results.concat({id: new Date(),value:action.result *2})\n                   \n                }\n        case actionTypes.DELETE_RESULT:\n                const updatedArray = state.results.filter(result => result.id !== action.resultElId)\n            \n                return{\n                    ...state,\n                    results:updatedArray \n                }\n    }\n    return state;\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}