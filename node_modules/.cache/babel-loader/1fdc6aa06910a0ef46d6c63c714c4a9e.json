{"ast":null,"code":"var _jsxFileName = \"/Users/yokohamakaito/Desktop/Reduxlearning/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport counterReducer from './store/reducers/counter';\nimport resultReducer from './store/reducers/result';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nconst rootReducer = combineReducers({\n  ctr: counterReducer,\n  res: resultReducer\n});\n\nconst logger = store => {\n  return next => {\n    return action => {\n      console.log('[Middleware] Dispatching', action);\n      const result = next(action);\n      console.log('[Middleware] next state', store.getState());\n      return result;\n    };\n  };\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger)));\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 41\n  }\n})), document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"sources":["/Users/yokohamakaito/Desktop/Reduxlearning/src/index.js"],"names":["React","ReactDOM","createStore","combineReducers","applyMiddleware","compose","App","registerServiceWorker","counterReducer","resultReducer","Provider","thunk","rootReducer","ctr","res","logger","store","next","action","console","log","result","getState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,WAAR,EAAoBC,eAApB,EAAoCC,eAApC,EAAqDC,OAArD,QAAmE,OAAnE;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,WAAW,GAAGT,eAAe,CAAC;AAChCU,EAAAA,GAAG,EAACL,cAD4B;AAEhCM,EAAAA,GAAG,EAACL;AAF4B,CAAD,CAAnC;;AAKA,MAAMM,MAAM,GAAGC,KAAK,IAAG;AACnB,SAAOC,IAAI,IAAG;AACV,WAAOC,MAAM,IAAG;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAyCF,MAAzC;AACA,YAAMG,MAAM,GAAGJ,IAAI,CAACC,MAAD,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCJ,KAAK,CAACM,QAAN,EAAtC;AACA,aAAOD,MAAP;AACH,KALD;AAMH,GAPD;AAQH,CATD;;AAWA,MAAME,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CpB,OAAxE;AAEA,MAAMW,KAAK,GAAGd,WAAW,CAACU,WAAD,EAAcW,gBAAgB,CAACnB,eAAe,CAACW,MAAD,CAAhB,CAA9B,CAAzB;AAEAd,QAAQ,CAACyB,MAAT,eAAgB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAwB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAxB,CAAhB,EAA4DW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5D;AACArB,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore,combineReducers,applyMiddleware, compose} from 'redux';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport counterReducer from './store/reducers/counter'\nimport resultReducer from './store/reducers/result'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\n\nconst rootReducer = combineReducers({\n    ctr:counterReducer,\n    res:resultReducer\n})\n\nconst logger = store =>{\n    return next =>{\n        return action =>{\n            console.log('[Middleware] Dispatching' , action)\n            const result = next(action);\n            console.log('[Middleware] next state',store.getState())\n            return result\n        }\n    }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(rootReducer ,composeEnhancers(applyMiddleware(logger)));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}