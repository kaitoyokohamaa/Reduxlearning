{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  results: []\n};\n\nconst deleteResult = (state, action) => {};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.STORE_RESULT:\n      return updateObject(state, {\n        results: state.results.concat({\n          id: new Date(),\n          value: action.result * 2\n        })\n      });\n\n    case actionTypes.DELETE_RESULT:\n      const updatedArray = state.results.filter(result => result.id !== action.resultElId);\n      return updateObject(state, {\n        results: updatedArray\n      });\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/yokohamakaito/Desktop/Reduxlearning/src/store/reducers/result.js"],"names":["actionTypes","updateObject","initialState","results","deleteResult","state","action","reducer","type","STORE_RESULT","concat","id","Date","value","result","DELETE_RESULT","updatedArray","filter","resultElId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,YAAR,QAA2B,YAA3B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAC;AADS,CAArB;;AAIA,MAAMC,YAAY,GAAE,CAACC,KAAD,EAAOC,MAAP,KAAiB,CAEpC,CAFD;;AAIA,MAAMC,OAAO,GAAG,CAACF,KAAK,GAAEH,YAAR,EAAqBI,MAArB,KAA+B;AAC3C,UAAOA,MAAM,CAACE,IAAd;AACI,SAAKR,WAAW,CAACS,YAAjB;AACQ,aAAOR,YAAY,CAACI,KAAD,EAAO;AAAEF,QAAAA,OAAO,EAACE,KAAK,CAACF,OAAN,CAAcO,MAAd,CAAqB;AAACC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAL;AAAgBC,UAAAA,KAAK,EAACP,MAAM,CAACQ,MAAP,GAAe;AAArC,SAArB;AAAV,OAAP,CAAnB;;AAER,SAAKd,WAAW,CAACe,aAAjB;AACQ,YAAMC,YAAY,GAAGX,KAAK,CAACF,OAAN,CAAcc,MAAd,CAAqBH,MAAM,IAAIA,MAAM,CAACH,EAAP,KAAcL,MAAM,CAACY,UAApD,CAArB;AACA,aAAOjB,YAAY,CAACI,KAAD,EAAO;AAAEF,QAAAA,OAAO,EAACa;AAAV,OAAP,CAAnB;AANZ;;AAQA,SAAOX,KAAP;AACH,CAVD;;AAYA,eAAeE,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\nimport {updateObject} from '../utility'\nconst initialState = {\n    results:[]\n}\n\nconst deleteResult =(state,action) =>{\n    \n}\n\nconst reducer = (state= initialState,action) =>{\n    switch(action.type){\n        case actionTypes.STORE_RESULT:\n                return updateObject(state,{ results:state.results.concat({id: new Date(),value:action.result *2})})\n\n        case actionTypes.DELETE_RESULT:\n                const updatedArray = state.results.filter(result => result.id !== action.resultElId)\n                return updateObject(state,{ results:updatedArray })\n    }\n    return state;\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}